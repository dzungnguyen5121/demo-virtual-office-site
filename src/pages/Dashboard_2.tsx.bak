import React, { useMemo, useRef, useState, useEffect } from "react";
import { Building2, Bell, Settings, Phone, FileText, MessageCircle, Gift, ChevronDown, Globe2, LogOut, User2, CreditCard, LayoutDashboard } from "lucide-react";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

const BRAND = {
  primary: "#0A2647",
  light: "#F5F6FA",
  accent: "#F5B700",
  accentAlt: "#00A896",
};

// Minimal i18n (EN + VI)
const tDict = {
  en: {
    dashboard: "Dashboard",
    promotions: "Promotions",
    settings: "Settings",
    manageCalls: "Manage Calls",
    manageDocs: "Manage Documents",
    billing: "Billing",
    profile: "Profile",
    claimNow: "Claim Now",
    chatWithAdmin: "Chat with Admin",
    typeMessage: "Type a message‚Ä¶",
    send: "Send",
    notifications: "Notifications",
    language: "Language",
    english: "English",
    vietnamese: "Vietnamese",
    logout: "Log out",
    offer: (n:number)=>`Special Offer ${n}`,
    submenu: { general: "General", payment: "Payment" },
    notifItems: [
      "üìÖ Payment due for September invoice",
      "üìû New call from: +44 20...",
      "üìÇ New document from: ABC Company",
    ],
  },
  vi: {
    dashboard: "B·∫£ng ƒëi·ªÅu khi·ªÉn",
    promotions: "Ch∆∞∆°ng tr√¨nh khuy·∫øn m·∫°i",
    settings: "C√†i ƒë·∫∑t",
    manageCalls: "Qu·∫£n l√Ω c√°c cu·ªôc g·ªçi",
    manageDocs: "Qu·∫£n l√Ω c√°c t√†i li·ªáu",
    billing: "Thanh to√°n",
    profile: "H·ªì s∆°",
    claimNow: "Nh·∫≠n ∆∞u ƒë√£i",
    chatWithAdmin: "Chat v·ªõi Admin",
    typeMessage: "Nh·∫≠p tin nh·∫Øn‚Ä¶",
    send: "G·ª≠i",
    notifications: "Th√¥ng b√°o",
    language: "Ng√¥n ng·ªØ",
    english: "Ti·∫øng Anh",
    vietnamese: "Ti·∫øng Vi·ªát",
    logout: "ƒêƒÉng xu·∫•t",
    offer: (n:number)=>`∆Øu ƒë√£i ƒë·∫∑c bi·ªát ${n}`,
    submenu: { general: "Chung", payment: "Thanh to√°n" },
    notifItems: [
      "üìÖ ƒê·∫øn h·∫°n thanh to√°n h√≥a ƒë∆°n th√°ng 9",
      "üìû Cu·ªôc g·ªçi m·ªõi t·ª´: +44 20...",
      "üìÇ T√†i li·ªáu m·ªõi t·ª´: C√¥ng ty ABC",
    ],
  },
};

type Lang = keyof typeof tDict;

export default function UserDashboard() {
  const [chatOpen, setChatOpen] = useState(false);
  const [notifOpen, setNotifOpen] = useState(false);
  const [userMenuOpen, setUserMenuOpen] = useState(false);
  const [lang, setLang] = useState<Lang>(() => (localStorage.getItem("vo_lang") as Lang) || "vi");
  const t = useMemo(() => tDict[lang], [lang]);

  useEffect(() => { localStorage.setItem("vo_lang", lang); }, [lang]);

  const user = { name: "Nguy·ªÖn VƒÉn A", email: "nguyenvana@company.com" };
  const initials = user.name.split(" ").map(w=>w[0]).join("").slice(0,2).toUpperCase();

  const userMenuRef = useRef<HTMLDivElement>(null);
  const notifRef = useRef<HTMLDivElement>(null);
  useEffect(()=>{
    const onDocClick = (e:MouseEvent)=>{
      const n = e.target as Node;
      if(userMenuOpen && userMenuRef.current && !userMenuRef.current.contains(n)) setUserMenuOpen(false);
      if(notifOpen && notifRef.current && !notifRef.current.contains(n)) setNotifOpen(false);
    };
    document.addEventListener("mousedown", onDocClick);
    return ()=>document.removeEventListener("mousedown", onDocClick);
  },[userMenuOpen, notifOpen]);

  return (
    <div className="flex min-h-screen bg-[#F5F6FA] font-sans">
      {/* Sidebar */}
      <aside className="hidden w-64 flex-col border-r bg-white p-6 md:flex">
        <div className="mb-10 flex items-center gap-2">
          <div className="flex h-10 w-10 items-center justify-center rounded-xl bg-[#0A2647]">
            <Building2 className="h-5 w-5 text-white" />
          </div>
          <span className="text-lg font-bold text-slate-900">Virtual Office UK</span>
        </div>
        <nav className="flex flex-col gap-2">
          <a href="#dashboard" className="group relative flex items-center gap-2 rounded-lg px-3 py-2 text-slate-700 hover:bg-[#F5F6FA]">
            <LayoutDashboard className="h-5 w-5" /> {t.dashboard}
          </a>
          <a href="#profile" className="group relative flex items-center gap-2 rounded-lg px-3 py-2 text-slate-700 hover:bg-[#F5F6FA]">
            <User2 className="h-5 w-5" /> {t.profile}
          </a>
          <a href="#calls" className="group relative flex items-center gap-2 rounded-lg px-3 py-2 text-slate-700 hover:bg-[#F5F6FA]">
            <Phone className="h-5 w-5" /> {t.manageCalls}
          </a>
          <a href="#docs" className="group relative flex items-center gap-2 rounded-lg px-3 py-2 text-slate-700 hover:bg-[#F5F6FA]">
            <FileText className="h-5 w-5" /> {t.manageDocs}
          </a>
          <a href="#billing" className="group relative flex items-center gap-2 rounded-lg px-3 py-2 text-slate-700 hover:bg-[#F5F6FA]">
            <CreditCard className="h-5 w-5" /> {t.billing}
          </a>
          <div className="group relative">
            <a href="#settings" className="flex items-center gap-2 rounded-lg px-3 py-2 text-slate-700 hover:bg-[#F5F6FA]">
              <Settings className="h-5 w-5" /> {t.settings}
            </a>
            <div className="pointer-events-none absolute left-full top-0 z-10 ml-1 w-44 overflow-hidden rounded-xl border bg-white py-1 opacity-0 shadow-lg transition group-hover:pointer-events-auto group-hover:opacity-100">
              <a href="#settings-general" className="block px-3 py-2 text-sm text-slate-700 hover:bg-slate-50">{t.submenu.general}</a>
              <a href="#settings-payment" className="block px-3 py-2 text-sm text-slate-700 hover:bg-slate-50">{t.submenu.payment}</a>
            </div>
          </div>
        </nav>
      </aside>

      {/* Main content */}
      <main className="flex-1">
        {/* Header */}
        <header className="flex items-center justify-between border-b bg-white px-6 py-4">
          <h1 className="text-xl font-bold text-slate-900">{t.dashboard}</h1>
          <div className="flex items-center gap-3">
            <button
              onClick={() => setLang((l)=> l === "en" ? "vi" : "en")}
              className="inline-flex items-center gap-2 rounded-xl border px-3 py-2 text-sm hover:bg-slate-50"
              aria-label={t.language}
              title={t.language}
            >
              <Globe2 className="h-4 w-4" /> {lang.toUpperCase()}
            </button>
            <div className="relative" ref={notifRef}>
              <button
                onClick={() => setNotifOpen((o) => !o)}
                className="relative rounded-full p-2 hover:bg-slate-100"
                aria-label={t.notifications}
              >
                <Bell className="h-5 w-5 text-slate-600" />
                <span className="absolute right-1 top-1 h-2 w-2 rounded-full bg-[#F5B700]" />
              </button>
              {notifOpen && (
                <div className="absolute right-0 z-20 mt-2 w-80 overflow-hidden rounded-2xl border bg-white shadow-xl">
                  <div className="border-b px-4 py-2 text-sm font-medium">{t.notifications}</div>
                  <ul className="max-h-80 divide-y overflow-auto text-sm">
                    {t.notifItems.map((item, idx) => (
                      <li key={idx} className="px-4 py-3">{item}</li>
                    ))}
                  </ul>
                </div>
              )}
            </div>
            <div className="relative" ref={userMenuRef}>
              <button
                onClick={() => setUserMenuOpen((o) => !o)}
                className="inline-flex items-center gap-2 rounded-xl border px-2 py-1 hover:bg-slate-50"
                aria-label="User menu"
              >
                <div className="flex h-8 w-8 items-center justify-center rounded-full bg-[#0A2647] text-xs font-bold text-white">
                  {initials}
                </div>
                <div className="hidden text-left sm:block">
                  <div className="text-sm font-semibold text-slate-900">{user.name}</div>
                  <div className="text-xs text-slate-500">{user.email}</div>
                </div>
                <ChevronDown className="h-4 w-4 text-slate-500" />
              </button>
              {userMenuOpen && (
                <div className="absolute right-0 z-20 mt-2 w-56 overflow-hidden rounded-2xl border bg-white shadow-xl">
                  <button className="flex w-full items-center gap-2 px-4 py-2 text-left text-sm text-red-600 hover:bg-red-50">
                    <LogOut className="h-4 w-4" /> {t.logout}
                  </button>
                </div>
              )}
            </div>
          </div>
        </header>

        {/* Dashboard Promotions only */}
        <section id="dashboard" className="px-6 py-6">
          <h2 className="mb-4 text-lg font-semibold text-slate-900">{t.promotions}</h2>
          <div className="grid gap-4 md:grid-cols-2 lg:grid-cols-3">
            {[1, 2, 3].map((p) => (
              <Card key={p} className="rounded-2xl border-0 shadow-sm ring-1 ring-slate-100">
                <CardHeader className="flex items-center gap-2">
                  <Gift className="h-5 w-5 text-[#F5B700]" />
                  <CardTitle>{t.offer(p)}</CardTitle>
                </CardHeader>
                <CardContent>
                  <p className="text-sm text-slate-600">Exclusive discount for your subscription plan. Don‚Äôt miss out!</p>
                  <Button className="mt-4 rounded-xl bg-[#F5B700] text-[#0A2647] hover:bg-[#e5aa00]">{t.claimNow}</Button>
                </CardContent>
              </Card>
            ))}
          </div>
        </section>
      </main>

      {/* Chat panel */}
      {chatOpen && (
        <div className="fixed bottom-4 right-4 w-80 rounded-2xl border bg-white shadow-xl">
          <div className="flex items-center justify-between border-b px-4 py-2">
            <h3 className="font-semibold">{t.chatWithAdmin}</h3>
            <button onClick={() => setChatOpen(false)} className="text-slate-500 hover:text-slate-700">√ó</button>
          </div>
          <div className="h-60 overflow-y-auto p-4 text-sm text-slate-600">
            <p><span className="font-medium">Admin:</span> Hello! How can I help you today?</p>
          </div>
          <div className="flex items-center gap-2 border-t p-2">
            <input type="text" placeholder={t.typeMessage} className="flex-1 rounded-lg border px-3 py-2 text-sm" />
            <Button className="rounded-lg bg-[#F5B700] text-[#0A2647] hover:bg-[#e5aa00]">{t.send}</Button>
          </div>
        </div>
      )}

      {/* Floating chat button */}
      <button
        onClick={() => setChatOpen((o) => !o)}
        className="fixed bottom-4 right-4 z-10 inline-flex h-12 w-12 items-center justify-center rounded-full bg-[#F5B700] text-[#0A2647] shadow-xl hover:bg-[#e5aa00]"
        aria-label={t.chatWithAdmin}
      >
        <MessageCircle className="h-6 w-6" />
      </button>
    </div>
  );
}
